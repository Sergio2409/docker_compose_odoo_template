services:
  odoo-stack:
    container_name: odoo-stack
    build:
      context: ./dockerfile
      dockerfile: odoo.Dockerfile
      args:
        ODOO_TAG: ${ODOO_TAG} # from .env file
    ports:
      - "${ODOO_WEB_PORT}:8069"
    stdin_open: true # To enable ipdb
    tty: true # To enable ipdb
    volumes:
      - ${ODOO_E_PATH}:/mnt/enterprise
      - ${EXTRA_ADDONS_PATH}:/mnt/extra-addons
      #- odoo-fs-data:/root/.local/share/odoo # Ephemeral volume
      #- /mnt/c/Users/sergi/src/odoo-dev/odoo-addons/odoo16/own/_db_backup/db/filestore:/root/.local/share/Odoo/filestore/odoo
      - ./odoo-config:/etc/odoo
      - odoo-web-data:/var/lib/odoo
    #Uncomment next line to install a module
    command: ${INIT_COMMAND}
    #Uncomment next line to update a module
    #command: -u openacademy -d odoo
    depends_on:
      - database-stack
    restart: always
  
  database-stack:
    container_name: database-stack    
    image: ${DB_IMAGE}:${DB_TAG}
    volumes:
      - ./db-own-data:/var/lib/postgresql/data
      #- ./init-user-db/:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:5432"
    #command: -p 5433
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWD}
      - POSTGRES_USER=${DB_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    
  nginx-stack:
    container_name: nginx-stack
    build:
      context: ./dockerfile
      dockerfile: nginx.Dockerfile
    volumes:
      - ./nginx-config:/etc/nginx/conf.d
    ports:
      - 8080:80   #non secure
      - 8443:443 #ssl
    depends_on:
      - odoo-stack
    restart: always

volumes:
  odoo-web-data:
  database-stack-data:
  odoo-fs-data:
